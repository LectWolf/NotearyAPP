apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion ProjectConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion ProjectConfig.minSdkVersion
        targetSdkVersion ProjectConfig.targetSdkVersion
        consumerProguardFiles 'consumer-rules.pro'
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
                arg("room.expandProjection", "true")
            }
        }
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    kotlinOptions {
        jvmTarget = javaVersion
    }

    kotlin {
        jvmToolchain(javaVersion.toInteger())
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'cc.mcii.noty.data.local'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = javaVersion
    }
}

dependencies {
    // Core module
    implementation project(":core")

    // Room
    api "androidx.room:room-runtime:$roomVersion"
    api "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    api "androidx.room:room-ktx:$roomVersion"

    // JavaX Inject
    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Testing
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    testImplementation "io.kotest:kotest-property:$kotestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
}
